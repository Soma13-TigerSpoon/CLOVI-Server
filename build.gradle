buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}


plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.clovi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	//보안
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.jetbrains:annotations:20.1.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//어노테이션
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'
	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//데이터베이스
	implementation 'mysql:mysql-connector-java'
	// querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	//Swagger 문서 쉽게 만들어주는 라이브러리
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.14'
	//Guava
	implementation 'com.google.guava:guava:31.1-jre'

	// prometheus
	implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.5'
	implementation 'io.micrometer:micrometer-registry-prometheus:1.9.5'

	//JWT Token 사용을 위한 라이브러리 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}
tasks.named('test') {
	useJUnitPlatform()
	useJUnit()
}
// querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
// querydsl 추가 끝
